{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function NewsCard(props){//converts date to design\nfunction convertDate(date){var newDate=new Date(date);var options={year:\"numeric\",month:\"long\",day:\"numeric\"};return newDate.toLocaleDateString(\"en-US\",options);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"li\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card__img\",style:{backgroundImage:\"url(\".concat(props.card.urlToImage,\")\")},children:[props.savedNewsLocation&&props.Loggedin?/*#__PURE__*/_jsx(\"div\",{className:\"card__keyword-display\",children:props.card.keyword}):!props.savedNewsLocation?/*#__PURE__*/_jsx(\"div\",{className:\"card__keyword-display\",children:props.searchTerm}):!props.savedNewsLocation&&props.Loggedin?/*#__PURE__*/_jsx(\"div\",{className:\"card__keyword-display\",children:props.searchTerm}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"card__btn-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"card__btn card__btn_\".concat(props.savedNewsLocation?'trashcan':'bookmark',\" card__btn_\").concat(props.card.isSaved?'active':'bookmark'),onClick:props.handleSaveArticle}),props.Loggedin&&props.savedNewsLocation?/*#__PURE__*/_jsx(\"button\",{className:\"card__btn-signin\",children:\"Remove from saved\"}):!props.Loggedin?/*#__PURE__*/_jsx(\"button\",{className:\"card__btn-signin\",children:\"Sign in to save articles\"}):null]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"card__date\",children:convertDate(props.card.publishedAt)}),/*#__PURE__*/_jsx(\"a\",{className:\"card__title\",href:props.card.url,target:\"blank\",children:props.card.title}),/*#__PURE__*/_jsx(\"p\",{className:\"card__description\",children:props.card.description}),/*#__PURE__*/_jsx(\"p\",{className:\"card__keyword\",children:props.card.source.name})]})});}export default NewsCard;","map":{"version":3,"sources":["/Users/desireebradish/news-explorer-frontend/src/components/NewsCard/NewsCard.js"],"names":["NewsCard","props","convertDate","date","newDate","Date","options","year","month","day","toLocaleDateString","backgroundImage","card","urlToImage","savedNewsLocation","Loggedin","keyword","searchTerm","isSaved","handleSaveArticle","publishedAt","url","title","description","source","name"],"mappings":"6IAAA,QAASA,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB;AACA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACvB,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,CAASF,IAAT,CAAhB,CACA,GAAMG,CAAAA,OAAO,CAAG,CAAEC,IAAI,CAAE,SAAR,CAAmBC,KAAK,CAAE,MAA1B,CAAkCC,GAAG,CAAE,SAAvC,CAAhB,CACA,MAAOL,CAAAA,OAAO,CAACM,kBAAR,CAA2B,OAA3B,CAAoCJ,OAApC,CAAP,CACH,CAGD,mBACK,sCACG,YAAI,SAAS,CAAC,MAAd,wBACI,aAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAE,CAAEK,eAAe,eAASV,KAAK,CAACW,IAAN,CAAWC,UAApB,KAAjB,CAAlC,WACGZ,KAAK,CAACa,iBAAN,EAA2Bb,KAAK,CAACc,QAAlC,cAA+C,YAAK,SAAS,CAAC,uBAAf,UAAwCd,KAAK,CAACW,IAAN,CAAWI,OAAnD,EAA/C,CACE,CAACf,KAAK,CAACa,iBAAP,cAA4B,YAAK,SAAS,CAAC,uBAAf,UAAwCb,KAAK,CAACgB,UAA9C,EAA5B,CACC,CAAChB,KAAK,CAACa,iBAAP,EAA4Bb,KAAK,CAACc,QAAnC,cAAgD,YAAK,SAAS,CAAC,uBAAf,UAAwCd,KAAK,CAACgB,UAA9C,EAAhD,cAAmH,cAHvH,cAII,aAAK,SAAS,CAAC,qBAAf,wBAEI,eAAQ,SAAS,+BAAyBhB,KAAK,CAACa,iBAAN,CAA0B,UAA1B,CAAuC,UAAhE,uBAAwFb,KAAK,CAACW,IAAN,CAAWM,OAAX,CAAqB,QAArB,CAAgC,UAAxH,CAAjB,CACA,OAAO,CAAEjB,KAAK,CAACkB,iBADf,EAFJ,CAIKlB,KAAK,CAACc,QAAN,EAAkBd,KAAK,CAACa,iBAAxB,cAA4C,eAAQ,SAAS,CAAC,kBAAlB,+BAA5C,CACI,CAACb,KAAK,CAACc,QAAP,cAAkB,eAAQ,SAAS,CAAC,kBAAlB,sCAAlB,CAA2F,IALpG,GAJJ,GADJ,cAeI,UAAG,SAAS,CAAC,YAAb,UAA2Bb,WAAW,CAACD,KAAK,CAACW,IAAN,CAAWQ,WAAZ,CAAtC,EAfJ,cAgBI,UAAG,SAAS,CAAC,aAAb,CAA2B,IAAI,CAAEnB,KAAK,CAACW,IAAN,CAAWS,GAA5C,CAAiD,MAAM,CAAC,OAAxD,UAAiEpB,KAAK,CAACW,IAAN,CAAWU,KAA5E,EAhBJ,cAiBI,UAAG,SAAS,CAAC,mBAAb,UAAkCrB,KAAK,CAACW,IAAN,CAAWW,WAA7C,EAjBJ,cAkBI,UAAG,SAAS,CAAC,eAAb,UAA8BtB,KAAK,CAACW,IAAN,CAAWY,MAAX,CAAkBC,IAAhD,EAlBJ,GADH,EADL,CA0BH,CAED,cAAezB,CAAAA,QAAf","sourcesContent":["function NewsCard(props) {\n    //converts date to design\n    function convertDate(date) {\n        const newDate = new Date(date);\n        const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n        return newDate.toLocaleDateString(\"en-US\", options);\n    }\n \n\n    return (\n        (<>\n            <li className='card'>\n                <div className='card__img' style={{ backgroundImage: `url(${props.card.urlToImage})` }}>\n                 {(props.savedNewsLocation && props.Loggedin) ? (<div className='card__keyword-display'>{props.card.keyword}</div>) : \n                    !props.savedNewsLocation ? (<div className='card__keyword-display'>{props.searchTerm}</div>) : \n                    (!props.savedNewsLocation && props.Loggedin) ? (<div className='card__keyword-display'>{props.searchTerm}</div>) : <div></div>}\n                    <div className='card__btn-container'>\n\n                        <button className={`card__btn card__btn_${props.savedNewsLocation ? 'trashcan' : 'bookmark'} card__btn_${props.card.isSaved ? 'active' : 'bookmark'}`} \n                        onClick={props.handleSaveArticle}></button>\n                        {props.Loggedin && props.savedNewsLocation ? <button className='card__btn-signin'>Remove from saved</button> :\n                            (!props.Loggedin ? <button className='card__btn-signin'>Sign in to save articles</button> : null)}\n\n                          \n                    </div>\n                </div>\n                <p className='card__date'>{convertDate(props.card.publishedAt)}</p>\n                <a className='card__title' href={props.card.url} target='blank'>{props.card.title}</a>\n                <p className='card__description'>{props.card.description}</p>\n                <p className='card__keyword'>{props.card.source.name}</p>\n            </li>\n\n        </>\n        )\n    )\n}\n\nexport default NewsCard;"]},"metadata":{},"sourceType":"module"}